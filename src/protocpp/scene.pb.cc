// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#include "scene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class GM_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Request>
      _instance;
} _GM_Request_default_instance_;
class GMPlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMPlayerData>
      _instance;
} _GMPlayerData_default_instance_;
class GM_ConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Connect>
      _instance;
} _GM_Connect_default_instance_;
class GM_ReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Ready>
      _instance;
} _GM_Ready_default_instance_;
class GMFrameDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMFrameData>
      _instance;
} _GMFrameData_default_instance_;
class GM_FrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Frame>
      _instance;
} _GM_Frame_default_instance_;
class GM_Frame_BCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Frame_BC>
      _instance;
} _GM_Frame_BC_default_instance_;
class GM_BeginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Begin>
      _instance;
} _GM_Begin_default_instance_;
class GMPoint2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMPoint2D>
      _instance;
} _GMPoint2D_default_instance_;
class GMPoint3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GMPoint3D>
      _instance;
} _GMPoint3D_default_instance_;
class GM_Position_BCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GM_Position_BC>
      _instance;
} _GM_Position_BC_default_instance_;
namespace protobuf_scene_2eproto {
void InitDefaultsGM_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GM_Request_default_instance_;
    new (ptr) ::GM_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Request::InitAsDefaultInstance();
}

void InitDefaultsGM_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_RequestImpl);
}

void InitDefaultsGMPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMPoint3D();
  {
    void* ptr = &::_GMPlayerData_default_instance_;
    new (ptr) ::GMPlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GMPlayerData::InitAsDefaultInstance();
}

void InitDefaultsGMPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMPlayerDataImpl);
}

void InitDefaultsGM_ConnectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GM_Connect_default_instance_;
    new (ptr) ::GM_Connect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Connect::InitAsDefaultInstance();
}

void InitDefaultsGM_Connect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_ConnectImpl);
}

void InitDefaultsGM_ReadyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMPoint3D();
  {
    void* ptr = &::_GM_Ready_default_instance_;
    new (ptr) ::GM_Ready();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Ready::InitAsDefaultInstance();
}

void InitDefaultsGM_Ready() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_ReadyImpl);
}

void InitDefaultsGMFrameDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GMFrameData_default_instance_;
    new (ptr) ::GMFrameData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GMFrameData::InitAsDefaultInstance();
}

void InitDefaultsGMFrameData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMFrameDataImpl);
}

void InitDefaultsGM_FrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMFrameData();
  {
    void* ptr = &::_GM_Frame_default_instance_;
    new (ptr) ::GM_Frame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Frame::InitAsDefaultInstance();
}

void InitDefaultsGM_Frame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_FrameImpl);
}

void InitDefaultsGM_Frame_BCImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMFrameData();
  {
    void* ptr = &::_GM_Frame_BC_default_instance_;
    new (ptr) ::GM_Frame_BC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Frame_BC::InitAsDefaultInstance();
}

void InitDefaultsGM_Frame_BC() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_Frame_BCImpl);
}

void InitDefaultsGM_BeginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMPlayerData();
  {
    void* ptr = &::_GM_Begin_default_instance_;
    new (ptr) ::GM_Begin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Begin::InitAsDefaultInstance();
}

void InitDefaultsGM_Begin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_BeginImpl);
}

void InitDefaultsGMPoint2DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GMPoint2D_default_instance_;
    new (ptr) ::GMPoint2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GMPoint2D::InitAsDefaultInstance();
}

void InitDefaultsGMPoint2D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMPoint2DImpl);
}

void InitDefaultsGMPoint3DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GMPoint3D_default_instance_;
    new (ptr) ::GMPoint3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GMPoint3D::InitAsDefaultInstance();
}

void InitDefaultsGMPoint3D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGMPoint3DImpl);
}

void InitDefaultsGM_Position_BCImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_scene_2eproto::InitDefaultsGMPoint3D();
  {
    void* ptr = &::_GM_Position_BC_default_instance_;
    new (ptr) ::GM_Position_BC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GM_Position_BC::InitAsDefaultInstance();
}

void InitDefaultsGM_Position_BC() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGM_Position_BCImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Request, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPlayerData, direction_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Connect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Connect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Connect, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Connect, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Connect, type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Ready, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Ready, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Ready, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Ready, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Ready, direction_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMFrameData, frametime_),
  1,
  4,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame, framedata_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame_BC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame_BC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame_BC, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Frame_BC, framedata_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Begin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Begin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Begin, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Begin, playerdata_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint2D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint2D, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint3D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GMPoint3D, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Position_BC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Position_BC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Position_BC, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Position_BC, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GM_Position_BC, direction_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::GM_Request)},
  { 7, 16, sizeof(::GMPlayerData)},
  { 20, 28, sizeof(::GM_Connect)},
  { 31, 39, sizeof(::GM_Ready)},
  { 42, 52, sizeof(::GMFrameData)},
  { 57, 65, sizeof(::GM_Frame)},
  { 68, 75, sizeof(::GM_Frame_BC)},
  { 77, 84, sizeof(::GM_Begin)},
  { 86, 93, sizeof(::GMPoint2D)},
  { 95, 103, sizeof(::GMPoint3D)},
  { 106, 114, sizeof(::GM_Position_BC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GMPlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Connect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Ready_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GMFrameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Frame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Frame_BC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Begin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GMPoint2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GMPoint3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GM_Position_BC_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "scene.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013scene.proto\"\030\n\nGM_Request\022\n\n\002id\030\001 \002(\003\""
      "i\n\014GMPlayerData\022\016\n\006roleId\030\001 \002(\005\022\014\n\004name\030"
      "\002 \001(\t\022\034\n\010position\030\003 \002(\0132\n.GMPoint3D\022\035\n\td"
      "irection\030\004 \002(\0132\n.GMPoint3D\"<\n\nGM_Connect"
      "\022\016\n\006roleId\030\001 \002(\005\022\020\n\010clientId\030\002 \002(\005\022\014\n\004ty"
      "pe\030\003 \002(\005\"W\n\010GM_Ready\022\016\n\006roleId\030\001 \002(\005\022\034\n\010"
      "position\030\002 \002(\0132\n.GMPoint3D\022\035\n\tdirection\030"
      "\003 \002(\0132\n.GMPoint3D\"W\n\013GMFrameData\022\n\n\002id\030\001"
      " \002(\003\022\014\n\004type\030\002 \002(\005\022\014\n\004data\030\003 \002(\014\022\r\n\005fram"
      "e\030\004 \002(\003\022\021\n\tframetime\030\005 \002(\003\"J\n\010GM_Frame\022\016"
      "\n\006roleId\030\001 \002(\005\022\r\n\005frame\030\002 \002(\003\022\037\n\tframeDa"
      "ta\030\004 \003(\0132\014.GMFrameData\"=\n\013GM_Frame_BC\022\r\n"
      "\005frame\030\001 \002(\003\022\037\n\tframeData\030\002 \003(\0132\014.GMFram"
      "eData\"=\n\010GM_Begin\022\016\n\006result\030\001 \002(\005\022!\n\npla"
      "yerData\030\002 \003(\0132\r.GMPlayerData\"!\n\tGMPoint2"
      "D\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\",\n\tGMPoint3D\022\t\n\001"
      "x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\"]\n\016GM_Posi"
      "tion_BC\022\016\n\006roleId\030\001 \002(\005\022\034\n\010position\030\002 \001("
      "\0132\n.GMPoint3D\022\035\n\tdirection\030\003 \001(\0132\n.GMPoi"
      "nt3D"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 764);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scene.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scene_2eproto

// ===================================================================

void GM_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Request::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Request::GM_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Request)
}
GM_Request::GM_Request(const GM_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:GM_Request)
}

void GM_Request::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
}

GM_Request::~GM_Request() {
  // @@protoc_insertion_point(destructor:GM_Request)
  SharedDtor();
}

void GM_Request::SharedDtor() {
}

void GM_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Request::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Request& GM_Request::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Request();
  return *internal_default_instance();
}


void GM_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Request)
  return false;
#undef DO_
}

void GM_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Request)
}

::google::protobuf::uint8* GM_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Request)
  return target;
}

size_t GM_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Request)
    MergeFrom(*source);
  }
}

void GM_Request::MergeFrom(const GM_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void GM_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Request::CopyFrom(const GM_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GM_Request::Swap(GM_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Request::InternalSwap(GM_Request* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Request::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMPlayerData::InitAsDefaultInstance() {
  ::_GMPlayerData_default_instance_._instance.get_mutable()->position_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
  ::_GMPlayerData_default_instance_._instance.get_mutable()->direction_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMPlayerData::kRoleIdFieldNumber;
const int GMPlayerData::kNameFieldNumber;
const int GMPlayerData::kPositionFieldNumber;
const int GMPlayerData::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMPlayerData::GMPlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGMPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GMPlayerData)
}
GMPlayerData::GMPlayerData(const GMPlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_position()) {
    position_ = new ::GMPoint3D(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::GMPoint3D(*from.direction_);
  } else {
    direction_ = NULL;
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:GMPlayerData)
}

void GMPlayerData::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&position_)) + sizeof(roleid_));
}

GMPlayerData::~GMPlayerData() {
  // @@protoc_insertion_point(destructor:GMPlayerData)
  SharedDtor();
}

void GMPlayerData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete direction_;
}

void GMPlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMPlayerData::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMPlayerData& GMPlayerData::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGMPlayerData();
  return *internal_default_instance();
}


void GMPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:GMPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      name_.UnsafeMutablePointer()->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->Clear();
    }
  }
  roleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMPlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GMPlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GMPlayerData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .GMPoint3D position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .GMPoint3D direction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GMPlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GMPlayerData)
  return false;
#undef DO_
}

void GMPlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GMPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GMPlayerData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required .GMPoint3D position = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *position_, output);
  }

  // required .GMPoint3D direction = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *direction_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GMPlayerData)
}

::google::protobuf::uint8* GMPlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GMPlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GMPlayerData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required .GMPoint3D position = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *position_, deterministic, target);
  }

  // required .GMPoint3D direction = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *direction_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GMPlayerData)
  return target;
}

size_t GMPlayerData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GMPlayerData)
  size_t total_size = 0;

  if (has_position()) {
    // required .GMPoint3D position = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (has_direction()) {
    // required .GMPoint3D direction = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  return total_size;
}
size_t GMPlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GMPlayerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .GMPoint3D position = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);

    // required .GMPoint3D direction = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);

    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string name = 2;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMPlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GMPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const GMPlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMPlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GMPlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GMPlayerData)
    MergeFrom(*source);
  }
}

void GMPlayerData::MergeFrom(const GMPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GMPlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_position()->::GMPoint3D::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_direction()->::GMPoint3D::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000008u) {
      roleid_ = from.roleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMPlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GMPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMPlayerData::CopyFrom(const GMPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GMPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMPlayerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void GMPlayerData::Swap(GMPlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMPlayerData::InternalSwap(GMPlayerData* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(position_, other->position_);
  swap(direction_, other->direction_);
  swap(roleid_, other->roleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMPlayerData::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Connect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Connect::kRoleIdFieldNumber;
const int GM_Connect::kClientIdFieldNumber;
const int GM_Connect::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Connect::GM_Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Connect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Connect)
}
GM_Connect::GM_Connect(const GM_Connect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:GM_Connect)
}

void GM_Connect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(type_));
}

GM_Connect::~GM_Connect() {
  // @@protoc_insertion_point(destructor:GM_Connect)
  SharedDtor();
}

void GM_Connect::SharedDtor() {
}

void GM_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Connect::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Connect& GM_Connect::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Connect();
  return *internal_default_instance();
}


void GM_Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&roleid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&roleid_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Connect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 clientId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_clientid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Connect)
  return false;
#undef DO_
}

void GM_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // required int32 clientId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clientid(), output);
  }

  // required int32 type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Connect)
}

::google::protobuf::uint8* GM_Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // required int32 clientId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clientid(), target);
  }

  // required int32 type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Connect)
  return target;
}

size_t GM_Connect::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GM_Connect)
  size_t total_size = 0;

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  if (has_clientid()) {
    // required int32 clientId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());
  }

  if (has_type()) {
    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t GM_Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Connect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

    // required int32 clientId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());

    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Connect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Connect)
    MergeFrom(*source);
  }
}

void GM_Connect::MergeFrom(const GM_Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Connect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      roleid_ = from.roleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      clientid_ = from.clientid_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GM_Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Connect::CopyFrom(const GM_Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Connect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void GM_Connect::Swap(GM_Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Connect::InternalSwap(GM_Connect* other) {
  using std::swap;
  swap(roleid_, other->roleid_);
  swap(clientid_, other->clientid_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Connect::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Ready::InitAsDefaultInstance() {
  ::_GM_Ready_default_instance_._instance.get_mutable()->position_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
  ::_GM_Ready_default_instance_._instance.get_mutable()->direction_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Ready::kRoleIdFieldNumber;
const int GM_Ready::kPositionFieldNumber;
const int GM_Ready::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Ready::GM_Ready()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Ready();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Ready)
}
GM_Ready::GM_Ready(const GM_Ready& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::GMPoint3D(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::GMPoint3D(*from.direction_);
  } else {
    direction_ = NULL;
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:GM_Ready)
}

void GM_Ready::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&position_)) + sizeof(roleid_));
}

GM_Ready::~GM_Ready() {
  // @@protoc_insertion_point(destructor:GM_Ready)
  SharedDtor();
}

void GM_Ready::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete direction_;
}

void GM_Ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Ready::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Ready& GM_Ready::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Ready();
  return *internal_default_instance();
}


void GM_Ready::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->Clear();
    }
  }
  roleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Ready)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .GMPoint3D position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .GMPoint3D direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Ready)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Ready)
  return false;
#undef DO_
}

void GM_Ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // required .GMPoint3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *position_, output);
  }

  // required .GMPoint3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *direction_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Ready)
}

::google::protobuf::uint8* GM_Ready::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // required .GMPoint3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *position_, deterministic, target);
  }

  // required .GMPoint3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *direction_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Ready)
  return target;
}

size_t GM_Ready::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GM_Ready)
  size_t total_size = 0;

  if (has_position()) {
    // required .GMPoint3D position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (has_direction()) {
    // required .GMPoint3D direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  return total_size;
}
size_t GM_Ready::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Ready)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .GMPoint3D position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);

    // required .GMPoint3D direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);

    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Ready::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Ready* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Ready>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Ready)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Ready)
    MergeFrom(*source);
  }
}

void GM_Ready::MergeFrom(const GM_Ready& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::GMPoint3D::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_direction()->::GMPoint3D::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000004u) {
      roleid_ = from.roleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GM_Ready::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Ready::CopyFrom(const GM_Ready& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Ready::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void GM_Ready::Swap(GM_Ready* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Ready::InternalSwap(GM_Ready* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(direction_, other->direction_);
  swap(roleid_, other->roleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Ready::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMFrameData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMFrameData::kIdFieldNumber;
const int GMFrameData::kTypeFieldNumber;
const int GMFrameData::kDataFieldNumber;
const int GMFrameData::kFrameFieldNumber;
const int GMFrameData::kFrametimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMFrameData::GMFrameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGMFrameData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GMFrameData)
}
GMFrameData::GMFrameData(const GMFrameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:GMFrameData)
}

void GMFrameData::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

GMFrameData::~GMFrameData() {
  // @@protoc_insertion_point(destructor:GMFrameData)
  SharedDtor();
}

void GMFrameData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GMFrameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMFrameData::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMFrameData& GMFrameData::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGMFrameData();
  return *internal_default_instance();
}


void GMFrameData::Clear() {
// @@protoc_insertion_point(message_clear_start:GMFrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    data_.UnsafeMutablePointer()->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMFrameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GMFrameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 frame = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 frametime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_frametime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GMFrameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GMFrameData)
  return false;
#undef DO_
}

void GMFrameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GMFrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // required int64 frame = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->frame(), output);
  }

  // required int64 frametime = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->frametime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GMFrameData)
}

::google::protobuf::uint8* GMFrameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GMFrameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // required int64 frame = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->frame(), target);
  }

  // required int64 frametime = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->frametime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GMFrameData)
  return target;
}

size_t GMFrameData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GMFrameData)
  size_t total_size = 0;

  if (has_data()) {
    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_frame()) {
    // required int64 frame = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame());
  }

  if (has_frametime()) {
    // required int64 frametime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frametime());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t GMFrameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GMFrameData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int64 frame = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame());

    // required int64 frametime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frametime());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMFrameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GMFrameData)
  GOOGLE_DCHECK_NE(&from, this);
  const GMFrameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMFrameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GMFrameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GMFrameData)
    MergeFrom(*source);
  }
}

void GMFrameData::MergeFrom(const GMFrameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GMFrameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      frame_ = from.frame_;
    }
    if (cached_has_bits & 0x00000008u) {
      frametime_ = from.frametime_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMFrameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GMFrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMFrameData::CopyFrom(const GMFrameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GMFrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMFrameData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void GMFrameData::Swap(GMFrameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMFrameData::InternalSwap(GMFrameData* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(id_, other->id_);
  swap(frame_, other->frame_);
  swap(frametime_, other->frametime_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMFrameData::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Frame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Frame::kRoleIdFieldNumber;
const int GM_Frame::kFrameFieldNumber;
const int GM_Frame::kFrameDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Frame::GM_Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Frame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Frame)
}
GM_Frame::GM_Frame(const GM_Frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      framedata_(from.framedata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frame_, &from.frame_,
    static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&frame_)) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:GM_Frame)
}

void GM_Frame::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&frame_)) + sizeof(roleid_));
}

GM_Frame::~GM_Frame() {
  // @@protoc_insertion_point(destructor:GM_Frame)
  SharedDtor();
}

void GM_Frame::SharedDtor() {
}

void GM_Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Frame::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Frame& GM_Frame::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Frame();
  return *internal_default_instance();
}


void GM_Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  framedata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&frame_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&roleid_) -
        reinterpret_cast<char*>(&frame_)) + sizeof(roleid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GMFrameData frameData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_framedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Frame)
  return false;
#undef DO_
}

void GM_Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // required int64 frame = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->frame(), output);
  }

  // repeated .GMFrameData frameData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->framedata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->framedata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Frame)
}

::google::protobuf::uint8* GM_Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // required int64 frame = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->frame(), target);
  }

  // repeated .GMFrameData frameData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->framedata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->framedata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Frame)
  return target;
}

size_t GM_Frame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GM_Frame)
  size_t total_size = 0;

  if (has_frame()) {
    // required int64 frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame());
  }

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  return total_size;
}
size_t GM_Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Frame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame());

    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .GMFrameData frameData = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->framedata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->framedata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Frame)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Frame)
    MergeFrom(*source);
  }
}

void GM_Frame::MergeFrom(const GM_Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  framedata_.MergeFrom(from.framedata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      frame_ = from.frame_;
    }
    if (cached_has_bits & 0x00000002u) {
      roleid_ = from.roleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GM_Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Frame::CopyFrom(const GM_Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Frame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->framedata())) return false;
  return true;
}

void GM_Frame::Swap(GM_Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Frame::InternalSwap(GM_Frame* other) {
  using std::swap;
  CastToBase(&framedata_)->InternalSwap(CastToBase(&other->framedata_));
  swap(frame_, other->frame_);
  swap(roleid_, other->roleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Frame::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Frame_BC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Frame_BC::kFrameFieldNumber;
const int GM_Frame_BC::kFrameDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Frame_BC::GM_Frame_BC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Frame_BC();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Frame_BC)
}
GM_Frame_BC::GM_Frame_BC(const GM_Frame_BC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      framedata_(from.framedata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_ = from.frame_;
  // @@protoc_insertion_point(copy_constructor:GM_Frame_BC)
}

void GM_Frame_BC::SharedCtor() {
  _cached_size_ = 0;
  frame_ = GOOGLE_LONGLONG(0);
}

GM_Frame_BC::~GM_Frame_BC() {
  // @@protoc_insertion_point(destructor:GM_Frame_BC)
  SharedDtor();
}

void GM_Frame_BC::SharedDtor() {
}

void GM_Frame_BC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Frame_BC::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Frame_BC& GM_Frame_BC::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Frame_BC();
  return *internal_default_instance();
}


void GM_Frame_BC::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Frame_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  framedata_.Clear();
  frame_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Frame_BC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Frame_BC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GMFrameData frameData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_framedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Frame_BC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Frame_BC)
  return false;
#undef DO_
}

void GM_Frame_BC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Frame_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frame(), output);
  }

  // repeated .GMFrameData frameData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->framedata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->framedata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Frame_BC)
}

::google::protobuf::uint8* GM_Frame_BC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Frame_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 frame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frame(), target);
  }

  // repeated .GMFrameData frameData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->framedata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->framedata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Frame_BC)
  return target;
}

size_t GM_Frame_BC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Frame_BC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 frame = 1;
  if (has_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame());
  }
  // repeated .GMFrameData frameData = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->framedata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->framedata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Frame_BC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Frame_BC)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Frame_BC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Frame_BC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Frame_BC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Frame_BC)
    MergeFrom(*source);
  }
}

void GM_Frame_BC::MergeFrom(const GM_Frame_BC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Frame_BC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  framedata_.MergeFrom(from.framedata_);
  if (from.has_frame()) {
    set_frame(from.frame());
  }
}

void GM_Frame_BC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Frame_BC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Frame_BC::CopyFrom(const GM_Frame_BC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Frame_BC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Frame_BC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->framedata())) return false;
  return true;
}

void GM_Frame_BC::Swap(GM_Frame_BC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Frame_BC::InternalSwap(GM_Frame_BC* other) {
  using std::swap;
  CastToBase(&framedata_)->InternalSwap(CastToBase(&other->framedata_));
  swap(frame_, other->frame_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Frame_BC::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Begin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Begin::kResultFieldNumber;
const int GM_Begin::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Begin::GM_Begin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Begin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Begin)
}
GM_Begin::GM_Begin(const GM_Begin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerdata_(from.playerdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GM_Begin)
}

void GM_Begin::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

GM_Begin::~GM_Begin() {
  // @@protoc_insertion_point(destructor:GM_Begin)
  SharedDtor();
}

void GM_Begin::SharedDtor() {
}

void GM_Begin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Begin::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Begin& GM_Begin::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Begin();
  return *internal_default_instance();
}


void GM_Begin::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Begin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerdata_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Begin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Begin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GMPlayerData playerData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Begin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Begin)
  return false;
#undef DO_
}

void GM_Begin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Begin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .GMPlayerData playerData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->playerdata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Begin)
}

::google::protobuf::uint8* GM_Begin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Begin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .GMPlayerData playerData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->playerdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Begin)
  return target;
}

size_t GM_Begin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Begin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }
  // repeated .GMPlayerData playerData = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->playerdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playerdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Begin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Begin)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Begin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Begin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Begin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Begin)
    MergeFrom(*source);
  }
}

void GM_Begin::MergeFrom(const GM_Begin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Begin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerdata_.MergeFrom(from.playerdata_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void GM_Begin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Begin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Begin::CopyFrom(const GM_Begin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Begin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Begin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->playerdata())) return false;
  return true;
}

void GM_Begin::Swap(GM_Begin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Begin::InternalSwap(GM_Begin* other) {
  using std::swap;
  CastToBase(&playerdata_)->InternalSwap(CastToBase(&other->playerdata_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Begin::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMPoint2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMPoint2D::kXFieldNumber;
const int GMPoint2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMPoint2D::GMPoint2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGMPoint2D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GMPoint2D)
}
GMPoint2D::GMPoint2D(const GMPoint2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:GMPoint2D)
}

void GMPoint2D::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

GMPoint2D::~GMPoint2D() {
  // @@protoc_insertion_point(destructor:GMPoint2D)
  SharedDtor();
}

void GMPoint2D::SharedDtor() {
}

void GMPoint2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMPoint2D::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMPoint2D& GMPoint2D::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGMPoint2D();
  return *internal_default_instance();
}


void GMPoint2D::Clear() {
// @@protoc_insertion_point(message_clear_start:GMPoint2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMPoint2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GMPoint2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GMPoint2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GMPoint2D)
  return false;
#undef DO_
}

void GMPoint2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GMPoint2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GMPoint2D)
}

::google::protobuf::uint8* GMPoint2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GMPoint2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GMPoint2D)
  return target;
}

size_t GMPoint2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GMPoint2D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMPoint2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GMPoint2D)
  GOOGLE_DCHECK_NE(&from, this);
  const GMPoint2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMPoint2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GMPoint2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GMPoint2D)
    MergeFrom(*source);
  }
}

void GMPoint2D::MergeFrom(const GMPoint2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GMPoint2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMPoint2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GMPoint2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMPoint2D::CopyFrom(const GMPoint2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GMPoint2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMPoint2D::IsInitialized() const {
  return true;
}

void GMPoint2D::Swap(GMPoint2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMPoint2D::InternalSwap(GMPoint2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMPoint2D::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GMPoint3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GMPoint3D::kXFieldNumber;
const int GMPoint3D::kYFieldNumber;
const int GMPoint3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GMPoint3D::GMPoint3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGMPoint3D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GMPoint3D)
}
GMPoint3D::GMPoint3D(const GMPoint3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:GMPoint3D)
}

void GMPoint3D::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

GMPoint3D::~GMPoint3D() {
  // @@protoc_insertion_point(destructor:GMPoint3D)
  SharedDtor();
}

void GMPoint3D::SharedDtor() {
}

void GMPoint3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GMPoint3D::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GMPoint3D& GMPoint3D::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGMPoint3D();
  return *internal_default_instance();
}


void GMPoint3D::Clear() {
// @@protoc_insertion_point(message_clear_start:GMPoint3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GMPoint3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GMPoint3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GMPoint3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GMPoint3D)
  return false;
#undef DO_
}

void GMPoint3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GMPoint3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GMPoint3D)
}

::google::protobuf::uint8* GMPoint3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GMPoint3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GMPoint3D)
  return target;
}

size_t GMPoint3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GMPoint3D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GMPoint3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GMPoint3D)
  GOOGLE_DCHECK_NE(&from, this);
  const GMPoint3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GMPoint3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GMPoint3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GMPoint3D)
    MergeFrom(*source);
  }
}

void GMPoint3D::MergeFrom(const GMPoint3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GMPoint3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GMPoint3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GMPoint3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GMPoint3D::CopyFrom(const GMPoint3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GMPoint3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GMPoint3D::IsInitialized() const {
  return true;
}

void GMPoint3D::Swap(GMPoint3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GMPoint3D::InternalSwap(GMPoint3D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GMPoint3D::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GM_Position_BC::InitAsDefaultInstance() {
  ::_GM_Position_BC_default_instance_._instance.get_mutable()->position_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
  ::_GM_Position_BC_default_instance_._instance.get_mutable()->direction_ = const_cast< ::GMPoint3D*>(
      ::GMPoint3D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GM_Position_BC::kRoleIdFieldNumber;
const int GM_Position_BC::kPositionFieldNumber;
const int GM_Position_BC::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GM_Position_BC::GM_Position_BC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_scene_2eproto::InitDefaultsGM_Position_BC();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GM_Position_BC)
}
GM_Position_BC::GM_Position_BC(const GM_Position_BC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::GMPoint3D(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::GMPoint3D(*from.direction_);
  } else {
    direction_ = NULL;
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:GM_Position_BC)
}

void GM_Position_BC::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&position_)) + sizeof(roleid_));
}

GM_Position_BC::~GM_Position_BC() {
  // @@protoc_insertion_point(destructor:GM_Position_BC)
  SharedDtor();
}

void GM_Position_BC::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete direction_;
}

void GM_Position_BC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GM_Position_BC::descriptor() {
  ::protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GM_Position_BC& GM_Position_BC::default_instance() {
  ::protobuf_scene_2eproto::InitDefaultsGM_Position_BC();
  return *internal_default_instance();
}


void GM_Position_BC::Clear() {
// @@protoc_insertion_point(message_clear_start:GM_Position_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->Clear();
    }
  }
  roleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GM_Position_BC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GM_Position_BC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GMPoint3D position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GMPoint3D direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GM_Position_BC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GM_Position_BC)
  return false;
#undef DO_
}

void GM_Position_BC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GM_Position_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // optional .GMPoint3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *position_, output);
  }

  // optional .GMPoint3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *direction_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GM_Position_BC)
}

::google::protobuf::uint8* GM_Position_BC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GM_Position_BC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // optional .GMPoint3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *position_, deterministic, target);
  }

  // optional .GMPoint3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *direction_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GM_Position_BC)
  return target;
}

size_t GM_Position_BC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GM_Position_BC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 roleId = 1;
  if (has_roleid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .GMPoint3D position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .GMPoint3D direction = 3;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *direction_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GM_Position_BC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GM_Position_BC)
  GOOGLE_DCHECK_NE(&from, this);
  const GM_Position_BC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GM_Position_BC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GM_Position_BC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GM_Position_BC)
    MergeFrom(*source);
  }
}

void GM_Position_BC::MergeFrom(const GM_Position_BC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GM_Position_BC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::GMPoint3D::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_direction()->::GMPoint3D::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000004u) {
      roleid_ = from.roleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GM_Position_BC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GM_Position_BC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GM_Position_BC::CopyFrom(const GM_Position_BC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GM_Position_BC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GM_Position_BC::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void GM_Position_BC::Swap(GM_Position_BC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GM_Position_BC::InternalSwap(GM_Position_BC* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(direction_, other->direction_);
  swap(roleid_, other->roleid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GM_Position_BC::GetMetadata() const {
  protobuf_scene_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scene_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Request* Arena::Create< ::GM_Request >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GMPlayerData* Arena::Create< ::GMPlayerData >(Arena* arena) {
  return Arena::CreateInternal< ::GMPlayerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Connect* Arena::Create< ::GM_Connect >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Connect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Ready* Arena::Create< ::GM_Ready >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Ready >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GMFrameData* Arena::Create< ::GMFrameData >(Arena* arena) {
  return Arena::CreateInternal< ::GMFrameData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Frame* Arena::Create< ::GM_Frame >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Frame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Frame_BC* Arena::Create< ::GM_Frame_BC >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Frame_BC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Begin* Arena::Create< ::GM_Begin >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Begin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GMPoint2D* Arena::Create< ::GMPoint2D >(Arena* arena) {
  return Arena::CreateInternal< ::GMPoint2D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GMPoint3D* Arena::Create< ::GMPoint3D >(Arena* arena) {
  return Arena::CreateInternal< ::GMPoint3D >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GM_Position_BC* Arena::Create< ::GM_Position_BC >(Arena* arena) {
  return Arena::CreateInternal< ::GM_Position_BC >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
