// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#ifndef PROTOBUF_scene_2eproto_INCLUDED
#define PROTOBUF_scene_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_scene_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGM_RequestImpl();
void InitDefaultsGM_Request();
void InitDefaultsGMPlayerDataImpl();
void InitDefaultsGMPlayerData();
void InitDefaultsGM_ConnectImpl();
void InitDefaultsGM_Connect();
void InitDefaultsGM_ReadyImpl();
void InitDefaultsGM_Ready();
void InitDefaultsGMFrameDataImpl();
void InitDefaultsGMFrameData();
void InitDefaultsGM_FrameImpl();
void InitDefaultsGM_Frame();
void InitDefaultsGM_Frame_BCImpl();
void InitDefaultsGM_Frame_BC();
void InitDefaultsGM_BeginImpl();
void InitDefaultsGM_Begin();
void InitDefaultsGMPoint2DImpl();
void InitDefaultsGMPoint2D();
void InitDefaultsGMPoint3DImpl();
void InitDefaultsGMPoint3D();
void InitDefaultsGM_Position_BCImpl();
void InitDefaultsGM_Position_BC();
inline void InitDefaults() {
  InitDefaultsGM_Request();
  InitDefaultsGMPlayerData();
  InitDefaultsGM_Connect();
  InitDefaultsGM_Ready();
  InitDefaultsGMFrameData();
  InitDefaultsGM_Frame();
  InitDefaultsGM_Frame_BC();
  InitDefaultsGM_Begin();
  InitDefaultsGMPoint2D();
  InitDefaultsGMPoint3D();
  InitDefaultsGM_Position_BC();
}
}  // namespace protobuf_scene_2eproto
class GMFrameData;
class GMFrameDataDefaultTypeInternal;
extern GMFrameDataDefaultTypeInternal _GMFrameData_default_instance_;
class GMPlayerData;
class GMPlayerDataDefaultTypeInternal;
extern GMPlayerDataDefaultTypeInternal _GMPlayerData_default_instance_;
class GMPoint2D;
class GMPoint2DDefaultTypeInternal;
extern GMPoint2DDefaultTypeInternal _GMPoint2D_default_instance_;
class GMPoint3D;
class GMPoint3DDefaultTypeInternal;
extern GMPoint3DDefaultTypeInternal _GMPoint3D_default_instance_;
class GM_Begin;
class GM_BeginDefaultTypeInternal;
extern GM_BeginDefaultTypeInternal _GM_Begin_default_instance_;
class GM_Connect;
class GM_ConnectDefaultTypeInternal;
extern GM_ConnectDefaultTypeInternal _GM_Connect_default_instance_;
class GM_Frame;
class GM_FrameDefaultTypeInternal;
extern GM_FrameDefaultTypeInternal _GM_Frame_default_instance_;
class GM_Frame_BC;
class GM_Frame_BCDefaultTypeInternal;
extern GM_Frame_BCDefaultTypeInternal _GM_Frame_BC_default_instance_;
class GM_Position_BC;
class GM_Position_BCDefaultTypeInternal;
extern GM_Position_BCDefaultTypeInternal _GM_Position_BC_default_instance_;
class GM_Ready;
class GM_ReadyDefaultTypeInternal;
extern GM_ReadyDefaultTypeInternal _GM_Ready_default_instance_;
class GM_Request;
class GM_RequestDefaultTypeInternal;
extern GM_RequestDefaultTypeInternal _GM_Request_default_instance_;
namespace google {
namespace protobuf {
template<> ::GMFrameData* Arena::Create< ::GMFrameData>(Arena*);
template<> ::GMPlayerData* Arena::Create< ::GMPlayerData>(Arena*);
template<> ::GMPoint2D* Arena::Create< ::GMPoint2D>(Arena*);
template<> ::GMPoint3D* Arena::Create< ::GMPoint3D>(Arena*);
template<> ::GM_Begin* Arena::Create< ::GM_Begin>(Arena*);
template<> ::GM_Connect* Arena::Create< ::GM_Connect>(Arena*);
template<> ::GM_Frame* Arena::Create< ::GM_Frame>(Arena*);
template<> ::GM_Frame_BC* Arena::Create< ::GM_Frame_BC>(Arena*);
template<> ::GM_Position_BC* Arena::Create< ::GM_Position_BC>(Arena*);
template<> ::GM_Ready* Arena::Create< ::GM_Ready>(Arena*);
template<> ::GM_Request* Arena::Create< ::GM_Request>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class GM_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Request) */ {
 public:
  GM_Request();
  virtual ~GM_Request();

  GM_Request(const GM_Request& from);

  inline GM_Request& operator=(const GM_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Request(GM_Request&& from) noexcept
    : GM_Request() {
    *this = ::std::move(from);
  }

  inline GM_Request& operator=(GM_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Request* internal_default_instance() {
    return reinterpret_cast<const GM_Request*>(
               &_GM_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GM_Request* other);
  friend void swap(GM_Request& a, GM_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Request* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Request>(NULL);
  }

  GM_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Request& from);
  void MergeFrom(const GM_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_Request)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_RequestImpl();
};
// -------------------------------------------------------------------

class GMPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GMPlayerData) */ {
 public:
  GMPlayerData();
  virtual ~GMPlayerData();

  GMPlayerData(const GMPlayerData& from);

  inline GMPlayerData& operator=(const GMPlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMPlayerData(GMPlayerData&& from) noexcept
    : GMPlayerData() {
    *this = ::std::move(from);
  }

  inline GMPlayerData& operator=(GMPlayerData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMPlayerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GMPlayerData* internal_default_instance() {
    return reinterpret_cast<const GMPlayerData*>(
               &_GMPlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GMPlayerData* other);
  friend void swap(GMPlayerData& a, GMPlayerData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMPlayerData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPlayerData>(NULL);
  }

  GMPlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPlayerData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMPlayerData& from);
  void MergeFrom(const GMPlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMPlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required .GMPoint3D position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  const ::GMPoint3D& position() const;
  ::GMPoint3D* release_position();
  ::GMPoint3D* mutable_position();
  void set_allocated_position(::GMPoint3D* position);

  // required .GMPoint3D direction = 4;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 4;
  const ::GMPoint3D& direction() const;
  ::GMPoint3D* release_direction();
  ::GMPoint3D* mutable_direction();
  void set_allocated_direction(::GMPoint3D* direction);

  // required int32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMPlayerData)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_name();
  void clear_has_name();
  void set_has_position();
  void clear_has_position();
  void set_has_direction();
  void clear_has_direction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::GMPoint3D* position_;
  ::GMPoint3D* direction_;
  ::google::protobuf::int32 roleid_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGMPlayerDataImpl();
};
// -------------------------------------------------------------------

class GM_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Connect) */ {
 public:
  GM_Connect();
  virtual ~GM_Connect();

  GM_Connect(const GM_Connect& from);

  inline GM_Connect& operator=(const GM_Connect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Connect(GM_Connect&& from) noexcept
    : GM_Connect() {
    *this = ::std::move(from);
  }

  inline GM_Connect& operator=(GM_Connect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Connect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Connect* internal_default_instance() {
    return reinterpret_cast<const GM_Connect*>(
               &_GM_Connect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GM_Connect* other);
  friend void swap(GM_Connect& a, GM_Connect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Connect* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Connect>(NULL);
  }

  GM_Connect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Connect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Connect& from);
  void MergeFrom(const GM_Connect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // required int32 clientId = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 2;
  ::google::protobuf::int32 clientid() const;
  void set_clientid(::google::protobuf::int32 value);

  // required int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Connect)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 clientid_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_ConnectImpl();
};
// -------------------------------------------------------------------

class GM_Ready : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Ready) */ {
 public:
  GM_Ready();
  virtual ~GM_Ready();

  GM_Ready(const GM_Ready& from);

  inline GM_Ready& operator=(const GM_Ready& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Ready(GM_Ready&& from) noexcept
    : GM_Ready() {
    *this = ::std::move(from);
  }

  inline GM_Ready& operator=(GM_Ready&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Ready& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Ready* internal_default_instance() {
    return reinterpret_cast<const GM_Ready*>(
               &_GM_Ready_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GM_Ready* other);
  friend void swap(GM_Ready& a, GM_Ready& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Ready* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Ready>(NULL);
  }

  GM_Ready* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Ready>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Ready& from);
  void MergeFrom(const GM_Ready& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Ready* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GMPoint3D position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::GMPoint3D& position() const;
  ::GMPoint3D* release_position();
  ::GMPoint3D* mutable_position();
  void set_allocated_position(::GMPoint3D* position);

  // required .GMPoint3D direction = 3;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  const ::GMPoint3D& direction() const;
  ::GMPoint3D* release_direction();
  ::GMPoint3D* mutable_direction();
  void set_allocated_direction(::GMPoint3D* direction);

  // required int32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Ready)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_position();
  void clear_has_position();
  void set_has_direction();
  void clear_has_direction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GMPoint3D* position_;
  ::GMPoint3D* direction_;
  ::google::protobuf::int32 roleid_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_ReadyImpl();
};
// -------------------------------------------------------------------

class GMFrameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GMFrameData) */ {
 public:
  GMFrameData();
  virtual ~GMFrameData();

  GMFrameData(const GMFrameData& from);

  inline GMFrameData& operator=(const GMFrameData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMFrameData(GMFrameData&& from) noexcept
    : GMFrameData() {
    *this = ::std::move(from);
  }

  inline GMFrameData& operator=(GMFrameData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMFrameData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GMFrameData* internal_default_instance() {
    return reinterpret_cast<const GMFrameData*>(
               &_GMFrameData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GMFrameData* other);
  friend void swap(GMFrameData& a, GMFrameData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMFrameData* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMFrameData>(NULL);
  }

  GMFrameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMFrameData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMFrameData& from);
  void MergeFrom(const GMFrameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int64 frame = 4;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 4;
  ::google::protobuf::int64 frame() const;
  void set_frame(::google::protobuf::int64 value);

  // required int64 frametime = 5;
  bool has_frametime() const;
  void clear_frametime();
  static const int kFrametimeFieldNumber = 5;
  ::google::protobuf::int64 frametime() const;
  void set_frametime(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMFrameData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_data();
  void clear_has_data();
  void set_has_frame();
  void clear_has_frame();
  void set_has_frametime();
  void clear_has_frametime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 frame_;
  ::google::protobuf::int64 frametime_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGMFrameDataImpl();
};
// -------------------------------------------------------------------

class GM_Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Frame) */ {
 public:
  GM_Frame();
  virtual ~GM_Frame();

  GM_Frame(const GM_Frame& from);

  inline GM_Frame& operator=(const GM_Frame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Frame(GM_Frame&& from) noexcept
    : GM_Frame() {
    *this = ::std::move(from);
  }

  inline GM_Frame& operator=(GM_Frame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Frame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Frame* internal_default_instance() {
    return reinterpret_cast<const GM_Frame*>(
               &_GM_Frame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GM_Frame* other);
  friend void swap(GM_Frame& a, GM_Frame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Frame* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Frame>(NULL);
  }

  GM_Frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Frame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Frame& from);
  void MergeFrom(const GM_Frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GMFrameData frameData = 4;
  int framedata_size() const;
  void clear_framedata();
  static const int kFrameDataFieldNumber = 4;
  ::GMFrameData* mutable_framedata(int index);
  ::google::protobuf::RepeatedPtrField< ::GMFrameData >*
      mutable_framedata();
  const ::GMFrameData& framedata(int index) const;
  ::GMFrameData* add_framedata();
  const ::google::protobuf::RepeatedPtrField< ::GMFrameData >&
      framedata() const;

  // required int64 frame = 2;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int64 frame() const;
  void set_frame(::google::protobuf::int64 value);

  // required int32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Frame)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_frame();
  void clear_has_frame();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GMFrameData > framedata_;
  ::google::protobuf::int64 frame_;
  ::google::protobuf::int32 roleid_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_FrameImpl();
};
// -------------------------------------------------------------------

class GM_Frame_BC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Frame_BC) */ {
 public:
  GM_Frame_BC();
  virtual ~GM_Frame_BC();

  GM_Frame_BC(const GM_Frame_BC& from);

  inline GM_Frame_BC& operator=(const GM_Frame_BC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Frame_BC(GM_Frame_BC&& from) noexcept
    : GM_Frame_BC() {
    *this = ::std::move(from);
  }

  inline GM_Frame_BC& operator=(GM_Frame_BC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Frame_BC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Frame_BC* internal_default_instance() {
    return reinterpret_cast<const GM_Frame_BC*>(
               &_GM_Frame_BC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GM_Frame_BC* other);
  friend void swap(GM_Frame_BC& a, GM_Frame_BC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Frame_BC* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Frame_BC>(NULL);
  }

  GM_Frame_BC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Frame_BC>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Frame_BC& from);
  void MergeFrom(const GM_Frame_BC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Frame_BC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GMFrameData frameData = 2;
  int framedata_size() const;
  void clear_framedata();
  static const int kFrameDataFieldNumber = 2;
  ::GMFrameData* mutable_framedata(int index);
  ::google::protobuf::RepeatedPtrField< ::GMFrameData >*
      mutable_framedata();
  const ::GMFrameData& framedata(int index) const;
  ::GMFrameData* add_framedata();
  const ::google::protobuf::RepeatedPtrField< ::GMFrameData >&
      framedata() const;

  // required int64 frame = 1;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int64 frame() const;
  void set_frame(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GM_Frame_BC)
 private:
  void set_has_frame();
  void clear_has_frame();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GMFrameData > framedata_;
  ::google::protobuf::int64 frame_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_Frame_BCImpl();
};
// -------------------------------------------------------------------

class GM_Begin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Begin) */ {
 public:
  GM_Begin();
  virtual ~GM_Begin();

  GM_Begin(const GM_Begin& from);

  inline GM_Begin& operator=(const GM_Begin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Begin(GM_Begin&& from) noexcept
    : GM_Begin() {
    *this = ::std::move(from);
  }

  inline GM_Begin& operator=(GM_Begin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Begin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Begin* internal_default_instance() {
    return reinterpret_cast<const GM_Begin*>(
               &_GM_Begin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GM_Begin* other);
  friend void swap(GM_Begin& a, GM_Begin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Begin* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Begin>(NULL);
  }

  GM_Begin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Begin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Begin& from);
  void MergeFrom(const GM_Begin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Begin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GMPlayerData playerData = 2;
  int playerdata_size() const;
  void clear_playerdata();
  static const int kPlayerDataFieldNumber = 2;
  ::GMPlayerData* mutable_playerdata(int index);
  ::google::protobuf::RepeatedPtrField< ::GMPlayerData >*
      mutable_playerdata();
  const ::GMPlayerData& playerdata(int index) const;
  ::GMPlayerData* add_playerdata();
  const ::google::protobuf::RepeatedPtrField< ::GMPlayerData >&
      playerdata() const;

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Begin)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GMPlayerData > playerdata_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_BeginImpl();
};
// -------------------------------------------------------------------

class GMPoint2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GMPoint2D) */ {
 public:
  GMPoint2D();
  virtual ~GMPoint2D();

  GMPoint2D(const GMPoint2D& from);

  inline GMPoint2D& operator=(const GMPoint2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMPoint2D(GMPoint2D&& from) noexcept
    : GMPoint2D() {
    *this = ::std::move(from);
  }

  inline GMPoint2D& operator=(GMPoint2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMPoint2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GMPoint2D* internal_default_instance() {
    return reinterpret_cast<const GMPoint2D*>(
               &_GMPoint2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GMPoint2D* other);
  friend void swap(GMPoint2D& a, GMPoint2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMPoint2D* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPoint2D>(NULL);
  }

  GMPoint2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPoint2D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMPoint2D& from);
  void MergeFrom(const GMPoint2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMPoint2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMPoint2D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGMPoint2DImpl();
};
// -------------------------------------------------------------------

class GMPoint3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GMPoint3D) */ {
 public:
  GMPoint3D();
  virtual ~GMPoint3D();

  GMPoint3D(const GMPoint3D& from);

  inline GMPoint3D& operator=(const GMPoint3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GMPoint3D(GMPoint3D&& from) noexcept
    : GMPoint3D() {
    *this = ::std::move(from);
  }

  inline GMPoint3D& operator=(GMPoint3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMPoint3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GMPoint3D* internal_default_instance() {
    return reinterpret_cast<const GMPoint3D*>(
               &_GMPoint3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GMPoint3D* other);
  friend void swap(GMPoint3D& a, GMPoint3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GMPoint3D* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPoint3D>(NULL);
  }

  GMPoint3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GMPoint3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMPoint3D& from);
  void MergeFrom(const GMPoint3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMPoint3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GMPoint3D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGMPoint3DImpl();
};
// -------------------------------------------------------------------

class GM_Position_BC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GM_Position_BC) */ {
 public:
  GM_Position_BC();
  virtual ~GM_Position_BC();

  GM_Position_BC(const GM_Position_BC& from);

  inline GM_Position_BC& operator=(const GM_Position_BC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GM_Position_BC(GM_Position_BC&& from) noexcept
    : GM_Position_BC() {
    *this = ::std::move(from);
  }

  inline GM_Position_BC& operator=(GM_Position_BC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GM_Position_BC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GM_Position_BC* internal_default_instance() {
    return reinterpret_cast<const GM_Position_BC*>(
               &_GM_Position_BC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GM_Position_BC* other);
  friend void swap(GM_Position_BC& a, GM_Position_BC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GM_Position_BC* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Position_BC>(NULL);
  }

  GM_Position_BC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GM_Position_BC>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GM_Position_BC& from);
  void MergeFrom(const GM_Position_BC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GM_Position_BC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GMPoint3D position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::GMPoint3D& position() const;
  ::GMPoint3D* release_position();
  ::GMPoint3D* mutable_position();
  void set_allocated_position(::GMPoint3D* position);

  // optional .GMPoint3D direction = 3;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  const ::GMPoint3D& direction() const;
  ::GMPoint3D* release_direction();
  ::GMPoint3D* mutable_direction();
  void set_allocated_direction(::GMPoint3D* direction);

  // required int32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM_Position_BC)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_position();
  void clear_has_position();
  void set_has_direction();
  void clear_has_direction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GMPoint3D* position_;
  ::GMPoint3D* direction_;
  ::google::protobuf::int32 roleid_;
  friend struct ::protobuf_scene_2eproto::TableStruct;
  friend void ::protobuf_scene_2eproto::InitDefaultsGM_Position_BCImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GM_Request

// required int64 id = 1;
inline bool GM_Request::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Request::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Request::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 GM_Request::id() const {
  // @@protoc_insertion_point(field_get:GM_Request.id)
  return id_;
}
inline void GM_Request::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GM_Request.id)
}

// -------------------------------------------------------------------

// GMPlayerData

// required int32 roleId = 1;
inline bool GMPlayerData::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMPlayerData::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMPlayerData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMPlayerData::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GMPlayerData::roleid() const {
  // @@protoc_insertion_point(field_get:GMPlayerData.roleId)
  return roleid_;
}
inline void GMPlayerData::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:GMPlayerData.roleId)
}

// optional string name = 2;
inline bool GMPlayerData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMPlayerData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMPlayerData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMPlayerData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GMPlayerData::name() const {
  // @@protoc_insertion_point(field_get:GMPlayerData.name)
  return name_.GetNoArena();
}
inline void GMPlayerData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GMPlayerData.name)
}
#if LANG_CXX11
inline void GMPlayerData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GMPlayerData.name)
}
#endif
inline void GMPlayerData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GMPlayerData.name)
}
inline void GMPlayerData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GMPlayerData.name)
}
inline ::std::string* GMPlayerData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:GMPlayerData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GMPlayerData::release_name() {
  // @@protoc_insertion_point(field_release:GMPlayerData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GMPlayerData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:GMPlayerData.name)
}

// required .GMPoint3D position = 3;
inline bool GMPlayerData::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMPlayerData::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMPlayerData::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMPlayerData::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
inline const ::GMPoint3D& GMPlayerData::position() const {
  const ::GMPoint3D* p = position_;
  // @@protoc_insertion_point(field_get:GMPlayerData.position)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GMPlayerData::release_position() {
  // @@protoc_insertion_point(field_release:GMPlayerData.position)
  clear_has_position();
  ::GMPoint3D* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::GMPoint3D* GMPlayerData::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GMPlayerData.position)
  return position_;
}
inline void GMPlayerData::set_allocated_position(::GMPoint3D* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
  } else {
    clear_has_position();
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:GMPlayerData.position)
}

// required .GMPoint3D direction = 4;
inline bool GMPlayerData::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMPlayerData::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMPlayerData::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMPlayerData::clear_direction() {
  if (direction_ != NULL) direction_->Clear();
  clear_has_direction();
}
inline const ::GMPoint3D& GMPlayerData::direction() const {
  const ::GMPoint3D* p = direction_;
  // @@protoc_insertion_point(field_get:GMPlayerData.direction)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GMPlayerData::release_direction() {
  // @@protoc_insertion_point(field_release:GMPlayerData.direction)
  clear_has_direction();
  ::GMPoint3D* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline ::GMPoint3D* GMPlayerData::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) {
    direction_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GMPlayerData.direction)
  return direction_;
}
inline void GMPlayerData::set_allocated_direction(::GMPoint3D* direction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete direction_;
  }
  if (direction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    set_has_direction();
  } else {
    clear_has_direction();
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:GMPlayerData.direction)
}

// -------------------------------------------------------------------

// GM_Connect

// required int32 roleId = 1;
inline bool GM_Connect::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Connect::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Connect::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Connect::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Connect::roleid() const {
  // @@protoc_insertion_point(field_get:GM_Connect.roleId)
  return roleid_;
}
inline void GM_Connect::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:GM_Connect.roleId)
}

// required int32 clientId = 2;
inline bool GM_Connect::has_clientid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Connect::set_has_clientid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Connect::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Connect::clear_clientid() {
  clientid_ = 0;
  clear_has_clientid();
}
inline ::google::protobuf::int32 GM_Connect::clientid() const {
  // @@protoc_insertion_point(field_get:GM_Connect.clientId)
  return clientid_;
}
inline void GM_Connect::set_clientid(::google::protobuf::int32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:GM_Connect.clientId)
}

// required int32 type = 3;
inline bool GM_Connect::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Connect::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Connect::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Connect::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GM_Connect::type() const {
  // @@protoc_insertion_point(field_get:GM_Connect.type)
  return type_;
}
inline void GM_Connect::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GM_Connect.type)
}

// -------------------------------------------------------------------

// GM_Ready

// required int32 roleId = 1;
inline bool GM_Ready::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Ready::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Ready::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Ready::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Ready::roleid() const {
  // @@protoc_insertion_point(field_get:GM_Ready.roleId)
  return roleid_;
}
inline void GM_Ready::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:GM_Ready.roleId)
}

// required .GMPoint3D position = 2;
inline bool GM_Ready::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Ready::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Ready::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Ready::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
inline const ::GMPoint3D& GM_Ready::position() const {
  const ::GMPoint3D* p = position_;
  // @@protoc_insertion_point(field_get:GM_Ready.position)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GM_Ready::release_position() {
  // @@protoc_insertion_point(field_release:GM_Ready.position)
  clear_has_position();
  ::GMPoint3D* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::GMPoint3D* GM_Ready::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GM_Ready.position)
  return position_;
}
inline void GM_Ready::set_allocated_position(::GMPoint3D* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
  } else {
    clear_has_position();
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:GM_Ready.position)
}

// required .GMPoint3D direction = 3;
inline bool GM_Ready::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Ready::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Ready::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Ready::clear_direction() {
  if (direction_ != NULL) direction_->Clear();
  clear_has_direction();
}
inline const ::GMPoint3D& GM_Ready::direction() const {
  const ::GMPoint3D* p = direction_;
  // @@protoc_insertion_point(field_get:GM_Ready.direction)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GM_Ready::release_direction() {
  // @@protoc_insertion_point(field_release:GM_Ready.direction)
  clear_has_direction();
  ::GMPoint3D* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline ::GMPoint3D* GM_Ready::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) {
    direction_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GM_Ready.direction)
  return direction_;
}
inline void GM_Ready::set_allocated_direction(::GMPoint3D* direction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete direction_;
  }
  if (direction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    set_has_direction();
  } else {
    clear_has_direction();
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:GM_Ready.direction)
}

// -------------------------------------------------------------------

// GMFrameData

// required int64 id = 1;
inline bool GMFrameData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMFrameData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMFrameData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMFrameData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 GMFrameData::id() const {
  // @@protoc_insertion_point(field_get:GMFrameData.id)
  return id_;
}
inline void GMFrameData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GMFrameData.id)
}

// required int32 type = 2;
inline bool GMFrameData::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GMFrameData::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GMFrameData::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GMFrameData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GMFrameData::type() const {
  // @@protoc_insertion_point(field_get:GMFrameData.type)
  return type_;
}
inline void GMFrameData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GMFrameData.type)
}

// required bytes data = 3;
inline bool GMFrameData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMFrameData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMFrameData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMFrameData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& GMFrameData::data() const {
  // @@protoc_insertion_point(field_get:GMFrameData.data)
  return data_.GetNoArena();
}
inline void GMFrameData::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GMFrameData.data)
}
#if LANG_CXX11
inline void GMFrameData::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GMFrameData.data)
}
#endif
inline void GMFrameData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GMFrameData.data)
}
inline void GMFrameData::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GMFrameData.data)
}
inline ::std::string* GMFrameData::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:GMFrameData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GMFrameData::release_data() {
  // @@protoc_insertion_point(field_release:GMFrameData.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GMFrameData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:GMFrameData.data)
}

// required int64 frame = 4;
inline bool GMFrameData::has_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMFrameData::set_has_frame() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMFrameData::clear_has_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMFrameData::clear_frame() {
  frame_ = GOOGLE_LONGLONG(0);
  clear_has_frame();
}
inline ::google::protobuf::int64 GMFrameData::frame() const {
  // @@protoc_insertion_point(field_get:GMFrameData.frame)
  return frame_;
}
inline void GMFrameData::set_frame(::google::protobuf::int64 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:GMFrameData.frame)
}

// required int64 frametime = 5;
inline bool GMFrameData::has_frametime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GMFrameData::set_has_frametime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GMFrameData::clear_has_frametime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GMFrameData::clear_frametime() {
  frametime_ = GOOGLE_LONGLONG(0);
  clear_has_frametime();
}
inline ::google::protobuf::int64 GMFrameData::frametime() const {
  // @@protoc_insertion_point(field_get:GMFrameData.frametime)
  return frametime_;
}
inline void GMFrameData::set_frametime(::google::protobuf::int64 value) {
  set_has_frametime();
  frametime_ = value;
  // @@protoc_insertion_point(field_set:GMFrameData.frametime)
}

// -------------------------------------------------------------------

// GM_Frame

// required int32 roleId = 1;
inline bool GM_Frame::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Frame::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Frame::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Frame::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Frame::roleid() const {
  // @@protoc_insertion_point(field_get:GM_Frame.roleId)
  return roleid_;
}
inline void GM_Frame::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:GM_Frame.roleId)
}

// required int64 frame = 2;
inline bool GM_Frame::has_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Frame::set_has_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Frame::clear_has_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Frame::clear_frame() {
  frame_ = GOOGLE_LONGLONG(0);
  clear_has_frame();
}
inline ::google::protobuf::int64 GM_Frame::frame() const {
  // @@protoc_insertion_point(field_get:GM_Frame.frame)
  return frame_;
}
inline void GM_Frame::set_frame(::google::protobuf::int64 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:GM_Frame.frame)
}

// repeated .GMFrameData frameData = 4;
inline int GM_Frame::framedata_size() const {
  return framedata_.size();
}
inline void GM_Frame::clear_framedata() {
  framedata_.Clear();
}
inline ::GMFrameData* GM_Frame::mutable_framedata(int index) {
  // @@protoc_insertion_point(field_mutable:GM_Frame.frameData)
  return framedata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GMFrameData >*
GM_Frame::mutable_framedata() {
  // @@protoc_insertion_point(field_mutable_list:GM_Frame.frameData)
  return &framedata_;
}
inline const ::GMFrameData& GM_Frame::framedata(int index) const {
  // @@protoc_insertion_point(field_get:GM_Frame.frameData)
  return framedata_.Get(index);
}
inline ::GMFrameData* GM_Frame::add_framedata() {
  // @@protoc_insertion_point(field_add:GM_Frame.frameData)
  return framedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMFrameData >&
GM_Frame::framedata() const {
  // @@protoc_insertion_point(field_list:GM_Frame.frameData)
  return framedata_;
}

// -------------------------------------------------------------------

// GM_Frame_BC

// required int64 frame = 1;
inline bool GM_Frame_BC::has_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Frame_BC::set_has_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Frame_BC::clear_has_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Frame_BC::clear_frame() {
  frame_ = GOOGLE_LONGLONG(0);
  clear_has_frame();
}
inline ::google::protobuf::int64 GM_Frame_BC::frame() const {
  // @@protoc_insertion_point(field_get:GM_Frame_BC.frame)
  return frame_;
}
inline void GM_Frame_BC::set_frame(::google::protobuf::int64 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:GM_Frame_BC.frame)
}

// repeated .GMFrameData frameData = 2;
inline int GM_Frame_BC::framedata_size() const {
  return framedata_.size();
}
inline void GM_Frame_BC::clear_framedata() {
  framedata_.Clear();
}
inline ::GMFrameData* GM_Frame_BC::mutable_framedata(int index) {
  // @@protoc_insertion_point(field_mutable:GM_Frame_BC.frameData)
  return framedata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GMFrameData >*
GM_Frame_BC::mutable_framedata() {
  // @@protoc_insertion_point(field_mutable_list:GM_Frame_BC.frameData)
  return &framedata_;
}
inline const ::GMFrameData& GM_Frame_BC::framedata(int index) const {
  // @@protoc_insertion_point(field_get:GM_Frame_BC.frameData)
  return framedata_.Get(index);
}
inline ::GMFrameData* GM_Frame_BC::add_framedata() {
  // @@protoc_insertion_point(field_add:GM_Frame_BC.frameData)
  return framedata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMFrameData >&
GM_Frame_BC::framedata() const {
  // @@protoc_insertion_point(field_list:GM_Frame_BC.frameData)
  return framedata_;
}

// -------------------------------------------------------------------

// GM_Begin

// required int32 result = 1;
inline bool GM_Begin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Begin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Begin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Begin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GM_Begin::result() const {
  // @@protoc_insertion_point(field_get:GM_Begin.result)
  return result_;
}
inline void GM_Begin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GM_Begin.result)
}

// repeated .GMPlayerData playerData = 2;
inline int GM_Begin::playerdata_size() const {
  return playerdata_.size();
}
inline void GM_Begin::clear_playerdata() {
  playerdata_.Clear();
}
inline ::GMPlayerData* GM_Begin::mutable_playerdata(int index) {
  // @@protoc_insertion_point(field_mutable:GM_Begin.playerData)
  return playerdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GMPlayerData >*
GM_Begin::mutable_playerdata() {
  // @@protoc_insertion_point(field_mutable_list:GM_Begin.playerData)
  return &playerdata_;
}
inline const ::GMPlayerData& GM_Begin::playerdata(int index) const {
  // @@protoc_insertion_point(field_get:GM_Begin.playerData)
  return playerdata_.Get(index);
}
inline ::GMPlayerData* GM_Begin::add_playerdata() {
  // @@protoc_insertion_point(field_add:GM_Begin.playerData)
  return playerdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GMPlayerData >&
GM_Begin::playerdata() const {
  // @@protoc_insertion_point(field_list:GM_Begin.playerData)
  return playerdata_;
}

// -------------------------------------------------------------------

// GMPoint2D

// optional int32 x = 1;
inline bool GMPoint2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMPoint2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMPoint2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMPoint2D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 GMPoint2D::x() const {
  // @@protoc_insertion_point(field_get:GMPoint2D.x)
  return x_;
}
inline void GMPoint2D::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:GMPoint2D.x)
}

// optional int32 y = 2;
inline bool GMPoint2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMPoint2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMPoint2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMPoint2D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 GMPoint2D::y() const {
  // @@protoc_insertion_point(field_get:GMPoint2D.y)
  return y_;
}
inline void GMPoint2D::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:GMPoint2D.y)
}

// -------------------------------------------------------------------

// GMPoint3D

// optional int32 x = 1;
inline bool GMPoint3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMPoint3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMPoint3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMPoint3D::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 GMPoint3D::x() const {
  // @@protoc_insertion_point(field_get:GMPoint3D.x)
  return x_;
}
inline void GMPoint3D::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:GMPoint3D.x)
}

// optional int32 y = 2;
inline bool GMPoint3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMPoint3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMPoint3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMPoint3D::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 GMPoint3D::y() const {
  // @@protoc_insertion_point(field_get:GMPoint3D.y)
  return y_;
}
inline void GMPoint3D::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:GMPoint3D.y)
}

// optional int32 z = 3;
inline bool GMPoint3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GMPoint3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GMPoint3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GMPoint3D::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 GMPoint3D::z() const {
  // @@protoc_insertion_point(field_get:GMPoint3D.z)
  return z_;
}
inline void GMPoint3D::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:GMPoint3D.z)
}

// -------------------------------------------------------------------

// GM_Position_BC

// required int32 roleId = 1;
inline bool GM_Position_BC::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GM_Position_BC::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GM_Position_BC::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GM_Position_BC::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 GM_Position_BC::roleid() const {
  // @@protoc_insertion_point(field_get:GM_Position_BC.roleId)
  return roleid_;
}
inline void GM_Position_BC::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:GM_Position_BC.roleId)
}

// optional .GMPoint3D position = 2;
inline bool GM_Position_BC::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GM_Position_BC::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GM_Position_BC::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GM_Position_BC::clear_position() {
  if (position_ != NULL) position_->Clear();
  clear_has_position();
}
inline const ::GMPoint3D& GM_Position_BC::position() const {
  const ::GMPoint3D* p = position_;
  // @@protoc_insertion_point(field_get:GM_Position_BC.position)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GM_Position_BC::release_position() {
  // @@protoc_insertion_point(field_release:GM_Position_BC.position)
  clear_has_position();
  ::GMPoint3D* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::GMPoint3D* GM_Position_BC::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GM_Position_BC.position)
  return position_;
}
inline void GM_Position_BC::set_allocated_position(::GMPoint3D* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
  } else {
    clear_has_position();
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:GM_Position_BC.position)
}

// optional .GMPoint3D direction = 3;
inline bool GM_Position_BC::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GM_Position_BC::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GM_Position_BC::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GM_Position_BC::clear_direction() {
  if (direction_ != NULL) direction_->Clear();
  clear_has_direction();
}
inline const ::GMPoint3D& GM_Position_BC::direction() const {
  const ::GMPoint3D* p = direction_;
  // @@protoc_insertion_point(field_get:GM_Position_BC.direction)
  return p != NULL ? *p : *reinterpret_cast<const ::GMPoint3D*>(
      &::_GMPoint3D_default_instance_);
}
inline ::GMPoint3D* GM_Position_BC::release_direction() {
  // @@protoc_insertion_point(field_release:GM_Position_BC.direction)
  clear_has_direction();
  ::GMPoint3D* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline ::GMPoint3D* GM_Position_BC::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) {
    direction_ = ::google::protobuf::Arena::Create< ::GMPoint3D >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:GM_Position_BC.direction)
  return direction_;
}
inline void GM_Position_BC::set_allocated_direction(::GMPoint3D* direction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete direction_;
  }
  if (direction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    set_has_direction();
  } else {
    clear_has_direction();
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:GM_Position_BC.direction)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_2eproto_INCLUDED
